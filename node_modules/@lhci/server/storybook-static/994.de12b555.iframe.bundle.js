/*! For license information please see 994.de12b555.iframe.bundle.js.LICENSE.txt */
"use strict";(globalThis.webpackChunk_lhci_server=globalThis.webpackChunk_lhci_server||[]).push([[994],{"../utils/src/audit-diff-finder.js":(module,__unused_webpack_exports,__webpack_require__)=>{const _=__webpack_require__("../utils/src/lodash.js"),{getGroupForAuditId}=__webpack_require__("../utils/src/seed-data/lhr-generator.js"),auditsToNotDIff=["main-thread-tasks","screenshot-thumbnails","metrics"];function getDeltaLabel(delta,deltaType="audit"){if(0===delta)return"neutral";let isImprovement=delta<0;return"score"===deltaType&&(isImprovement=delta>0),isImprovement?"improvement":"regression"}function getRowLabel(diffs){if(!diffs.length)return"no change";if(diffs.some((diff=>"itemAddition"===diff.type)))return"added";if(diffs.some((diff=>"itemRemoval"===diff.type)))return"removed";const itemDeltaDiffs=diffs.filter((diff=>"itemDelta"===diff.type));return itemDeltaDiffs.every((diff=>diff.compareValue>diff.baseValue))?"worse":itemDeltaDiffs.every((diff=>diff.compareValue<diff.baseValue))?"better":itemDeltaDiffs.length?"ambiguous":"no change"}function getMatchingDiffsForIndex(diffs,compareItemIndex,baseItemIndex){return diffs.filter((diff=>{const compareIndex="compareItemIndex"in diff?diff.compareItemIndex:void 0,baseIndex="baseItemIndex"in diff?diff.baseItemIndex:void 0;return"number"==typeof compareIndex?compareIndex===compareItemIndex:"number"==typeof baseIndex&&baseIndex===baseItemIndex}))}function getRowLabelForIndex(diffs,compareItemIndex,baseItemIndex){return getRowLabel(getMatchingDiffsForIndex(diffs,compareItemIndex,baseItemIndex))}function getWorstNumericDeltaForIndex(diffs,compareItemIndex,baseItemIndex){const numericDiffs=getMatchingDiffsForIndex(diffs,compareItemIndex,baseItemIndex).filter(isNumericAuditDiff);if(numericDiffs.length)return Math.max(...numericDiffs.map((diff=>getDeltaStats(diff).delta)))}function isNumericAuditDiff(diff){return["score","numericValue","itemCount","itemDelta"].includes(diff.type)}function getScoreLevel(score){return"number"!=typeof score?"error":score>=.9?"pass":score>=.5?"average":"fail"}function getDeltaStats(diff){const{baseValue,compareValue}=diff,delta=compareValue-baseValue,absoluteDelta=Math.abs(delta);if(0===delta)return{delta,absoluteDelta,percentDelta:0,percentAbsoluteDelta:0};const percentDelta=baseValue?delta/baseValue:1;return{delta,absoluteDelta,percentDelta,percentAbsoluteDelta:Math.abs(percentDelta)}}function createAuditDiff(diff){const{auditId,type,baseValue,compareValue,baseItemIndex,compareItemIndex,itemKey}=diff;if("itemAddition"===type){if("number"!=typeof compareItemIndex)throw new Error("compareItemIndex is not set");return{auditId,type,compareItemIndex}}if("itemRemoval"===type){if("number"!=typeof baseItemIndex)throw new Error("baseItemIndex is not set");return{auditId,type,baseItemIndex}}if("displayValue"===type)throw new Error("Do not use createAuditDiff for displayValue, just manually create");if("number"!=typeof compareValue||"number"!=typeof baseValue||!Number.isFinite(baseValue)||!Number.isFinite(compareValue)||"error"===type)return{auditId,type:"error",attemptedType:type,baseValue:baseValue||NaN,compareValue:compareValue||NaN};const numericDiffResult={auditId,type:"score",baseValue,compareValue};if("itemDelta"===type){if("string"!=typeof itemKey)throw new Error("itemKey is not set");if("number"!=typeof baseItemIndex&&"number"!=typeof compareItemIndex)throw new Error("Either baseItemIndex or compareItemIndex must be set");return{...numericDiffResult,type:"itemDelta",baseItemIndex,compareItemIndex,itemKey}}return{...numericDiffResult,type}}function findAuditDetailItemKeyDiffs(auditId,baseEntry,compareEntry,headings){const diffs=[];for(const key of Object.keys(baseEntry.item)){const baseValue=baseEntry.item[key],compareValue=compareEntry.item[key];"number"==typeof baseValue&&"number"==typeof compareValue&&(headings.some((heading=>heading.key===key))&&diffs.push(createAuditDiff({auditId,type:"itemDelta",itemKey:key,baseItemIndex:baseEntry.index,compareItemIndex:compareEntry.index,baseValue,compareValue})))}return diffs}function synthesizeItemKeyDiffs(diffs,baseItems,compareItems){const itemKeyDiffs=[];for(const diff of diffs){if("itemAddition"!==diff.type&&"itemRemoval"!==diff.type)continue;const item="itemAddition"===diff.type?compareItems[diff.compareItemIndex]:baseItems[diff.baseItemIndex];for(const key of Object.keys(item)){const baseValue="itemAddition"===diff.type?0:item[key],compareValue="itemAddition"===diff.type?item[key]:0;if("number"!=typeof compareValue||"number"!=typeof baseValue)continue;const itemIndexKeyName="itemAddition"===diff.type?"compareItemIndex":"baseItemIndex",itemIndexValue="itemAddition"===diff.type?diff.compareItemIndex:diff.baseItemIndex;itemKeyDiffs.push(createAuditDiff({auditId:diff.auditId,type:"itemDelta",itemKey:key,[itemIndexKeyName]:itemIndexValue,baseValue,compareValue}))}}return itemKeyDiffs}function replaceNondeterministicStrings(s){if(s.startsWith("http")&&s.includes("?"))try{const url=new URL(s);url.search="",s=url.href}catch(err){}return s.replace(/www-embed-player-[0-9a-z]+/i,"www-embed-player").replace(/player_ias-[0-9a-z]+/i,"player_ias").replace(/\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/gi,"UUID").replace(/:[0-9]{3,5}\//,":PORT/").replace(/(\.|-)[0-9a-f]{6,8}\.(js|css|woff|html|png|jpeg|jpg|svg)/i,"$1HASH.$2")}function deepPruneItemForKeySerialization(item){if("object"!=typeof item)return item;if(null===item)return item;if(Array.isArray(item))return item.map((entry=>deepPruneItemForKeySerialization(entry)));{const itemAsRecord=item,keysToKeep=Object.keys(item).filter((key=>!key.startsWith("_"))),copy={};for(const key of keysToKeep)copy[key]=deepPruneItemForKeySerialization(itemAsRecord[key]);return copy}}function getItemKey(item){const source=item.source;return"string"==typeof source?source:source&&source.url?`${source.url}:${source.line}:${source.column}`:"string"==typeof item.label?item.label:"string"==typeof item.groupLabel?item.groupLabel:"string"==typeof item.name?item.name:"string"==typeof item.statistic?item.statistic:item.entity&&"string"==typeof item.entity.text?item.entity.text:"string"==typeof item.node?.path?item.node.path:"string"==typeof item.tapTarget?.path&&"string"==typeof item.overlappingTarget?.path?`${item.tapTarget.path} + ${item.overlappingTarget.path}`:"string"==typeof item.url&&item.url?item.url:"string"==typeof item.origin&&item.origin?item.origin:JSON.stringify(deepPruneItemForKeySerialization(item))}function zipBaseAndCompareItems(baseItems,compareItems){const groupedByKey=_.groupIntoMap([...baseItems.map(((item,i)=>({item,kind:"base",index:i}))),...compareItems.map(((item,i)=>({item,kind:"compare",index:i})))],(entry=>replaceNondeterministicStrings(getItemKey(entry.item)))),zipped=[];for(const entries of groupedByKey.values()){const baseItems=entries.filter((entry=>"base"===entry.kind)),compareItems=entries.filter((entry=>"compare"===entry.kind));if(baseItems.length>1||compareItems.length>1)for(const entry of entries)zipped.push({[entry.kind]:entry});else zipped.push({base:baseItems[0],compare:compareItems[0]})}return zipped}function normalizeScore(audit){return"notApplicable"===audit.scoreDisplayMode?1:"informative"===audit.scoreDisplayMode?0:audit.score}function getNumericValue(audit){return"number"!=typeof audit.numericValue&&audit.details&&"number"==typeof audit.details.overallSavingsMs?audit.details.overallSavingsMs:audit.numericValue}function normalizeNumericValue(audit){return"notApplicable"===audit.scoreDisplayMode?0:getNumericValue(audit)}function normalizeDetails(audit){return audit.details?{items:audit.details.items||[],headings:audit.details.headings||[]}:{items:[],headings:[]}}module.exports={findAuditDiffs:function findAuditDiffs(baseAudit,compareAudit,options={}){const auditId=baseAudit.id||"",{percentAbsoluteDeltaThreshold=0}=options,diffs=[];if(auditsToNotDIff.includes(auditId))return diffs;"number"!=typeof baseAudit.score&&"number"!=typeof compareAudit.score||diffs.push(createAuditDiff({auditId,type:"score",baseValue:normalizeScore(baseAudit),compareValue:normalizeScore(compareAudit)})),"number"!=typeof getNumericValue(baseAudit)&&"number"!=typeof getNumericValue(compareAudit)||diffs.push(createAuditDiff({auditId,type:"numericValue",baseValue:normalizeNumericValue(baseAudit),compareValue:normalizeNumericValue(compareAudit)})),"string"!=typeof baseAudit.displayValue&&"string"!=typeof compareAudit.displayValue||diffs.push({auditId,type:"displayValue",baseValue:baseAudit.displayValue||"",compareValue:compareAudit.displayValue||""});let hasItemDetails=!1;const baseAuditDetails=baseAudit.details||{},compareAuditDetails=compareAudit.details||{};if("debugdata"!==baseAuditDetails.type&&baseAuditDetails.items||"debugdata"!==compareAuditDetails.type&&compareAuditDetails.items){hasItemDetails=!0;const{items:baseItems,headings:baseHeadings}=normalizeDetails(baseAudit),{items:compareItems,headings:compareHeadings}=normalizeDetails(compareAudit),headings=baseHeadings.concat(compareHeadings);diffs.push(createAuditDiff({auditId,type:"itemCount",baseValue:baseItems.length,compareValue:compareItems.length})),diffs.push(...function findAuditDetailItemsDiffs(auditId,baseItems,compareItems,headings){const diffs=[];for(const{base,compare}of zipBaseAndCompareItems(baseItems,compareItems))if(base&&compare)diffs.push(...findAuditDetailItemKeyDiffs(auditId,base,compare,headings));else if(compare)diffs.push({type:"itemAddition",auditId,compareItemIndex:compare.index});else{if(!base)throw new Error("Impossible");diffs.push({type:"itemRemoval",auditId,baseItemIndex:base.index})}return diffs}(auditId,baseItems,compareItems,headings)),options.synthesizeItemKeyDiffs&&diffs.push(...synthesizeItemKeyDiffs(diffs,baseItems,compareItems))}const filteredDiffs=diffs.filter((diff=>"error"===diff.type||("itemAddition"===diff.type||"itemRemoval"===diff.type||("score"!==diff.type||options.forceAllScoreDiffs?"displayValue"===diff.type?diff.baseValue!==diff.compareValue&&!options.skipDisplayValueDiffs:getDeltaStats(diff).percentAbsoluteDelta>percentAbsoluteDeltaThreshold:getScoreLevel(diff.baseValue)!==getScoreLevel(diff.compareValue)))));if(1===filteredDiffs.length&&"displayValue"===filteredDiffs[0].type)return[];const isAllPassing=1===compareAudit.score&&1===baseAudit.score;return"metrics"!==getGroupForAuditId(auditId)&&filteredDiffs.every((diff=>"displayValue"===diff.type||"numericValue"===diff.type))&&(isAllPassing||hasItemDetails)?[]:filteredDiffs},getDiffSeverity:function getDiffSeverity(diff){const delta=isNumericAuditDiff(diff)?getDeltaStats(diff).absoluteDelta:0;return"error"===diff.type?1e12:"score"===diff.type?1e10*delta:"numericValue"===diff.type?1e8*Math.max(delta/1e3,1):"itemCount"===diff.type?1e6*delta:"itemAddition"===diff.type||"itemRemoval"===diff.type?1e5:"itemDelta"===diff.type?Math.min(Math.max(delta/100,1),99999):0},getDeltaLabel,getDeltaStats,getDiffLabel:function getDiffLabel(diff){switch(diff.type){case"error":case"itemAddition":return"regression";case"score":return getDeltaLabel(getDeltaStats(diff).delta,"score");case"numericValue":case"itemCount":case"itemDelta":return getDeltaLabel(getDeltaStats(diff).delta,"audit");case"itemRemoval":return"improvement";default:return"neutral"}},getRowLabel,getRowLabelForIndex,getMostSevereDiffLabel:function getMostSevereDiffLabel(labels){return labels.some((l=>"regression"===l))?"regression":labels.some((l=>"neutral"===l))?"neutral":"improvement"},getMetricScoreLevel:function getMetricScoreLevel(value,cutoffs){return"number"!=typeof value?"error":value<=cutoffs[0]?"pass":value<=cutoffs[1]?"average":"fail"},zipBaseAndCompareItems,synthesizeItemKeyDiffs,sortZippedBaseAndCompareItems:function sortZippedBaseAndCompareItems(diffs,zippedItems){const rowLabelSortOrder=["added","worse","ambiguous","removed","better","no change"];return zippedItems.map((item=>({...item,diffs:getMatchingDiffsForIndex(diffs,item.compare&&item.compare.index,item.base&&item.base.index)}))).sort(((a,b)=>{const compareIndexA=a.compare&&a.compare.index,baseIndexA=a.base&&a.base.index,compareIndexB=b.compare&&b.compare.index,baseIndexB=b.base&&b.base.index,rowStateIndexA=rowLabelSortOrder.indexOf(getRowLabelForIndex(diffs,compareIndexA,baseIndexA)),rowStateIndexB=rowLabelSortOrder.indexOf(getRowLabelForIndex(diffs,compareIndexB,baseIndexB)),labelValueA=getItemKey(a.compare&&a.compare.item||a.base&&a.base.item||{}),labelValueB=getItemKey(b.compare&&b.compare.item||b.base&&b.base.item||{}),numericValueA=getWorstNumericDeltaForIndex(diffs,compareIndexA,baseIndexA),numericValueB=getWorstNumericDeltaForIndex(diffs,compareIndexB,baseIndexB);return rowStateIndexA===rowStateIndexB?"number"==typeof numericValueA&&"number"==typeof numericValueB?numericValueB-numericValueA:labelValueA.localeCompare(labelValueB):rowStateIndexA-rowStateIndexB}))},replaceNondeterministicStrings}},"../utils/src/lodash.js":module=>{function kebabCase(s,opts){let kebabed=s.replace(/([a-z])([A-Z])/g,"$1-$2");return opts&&opts.alphanumericOnly&&(kebabed=kebabed.replace(/[^a-z0-9]+/gi,"-").replace(/-+/g,"-").replace(/(^-|-$)/g,"")),kebabed.toLowerCase()}function groupIntoMap(items,keyFn){const groups=new Map;for(const item of items){const key=keyFn(item),group=groups.get(key)||[];group.push(item),groups.set(key,group)}return groups}module.exports={merge:function merge(v1,v2){if(Array.isArray(v1)){if(!Array.isArray(v2))return v2;for(let i=0;i<Math.max(v1.length,v2.length);i++)v1[i]=i<v2.length?merge(v1[i],v2[i]):v1[i];return v1}if("object"==typeof v1&&null!==v1){if("object"!=typeof v2||null===v2)return v2;const o1=v1,o2=v2,o1Keys=new Set(Object.keys(o1)),o2Keys=new Set(Object.keys(o2));for(const key of new Set([...o1Keys,...o2Keys]))o1[key]=key in o2?merge(o1[key],o2[key]):o1[key];return v1}return v2},kebabCase,debounce:function debounce(fn,time){let timeout;const debouncedFn=(...args)=>{timeout&&clearTimeout(timeout),timeout=setTimeout((()=>fn(...args)),time)};return debouncedFn.cancel=()=>{timeout&&clearTimeout(timeout),timeout=void 0},debouncedFn},range(from,to,by=1){const numbers=[];for(let i=from;i<to;i+=by)numbers.push(i);return numbers},startCase:s=>kebabCase(s).split("-").map((word=>`${word.slice(0,1).toUpperCase()}${word.slice(1)}`)).join(" "),padStart:(s,length,padding=" ")=>s.length>=length?s:`${padding.repeat(length)}${s}`.slice(-length),padEnd:(s,length,padding=" ")=>s.length>=length?s:`${s}${padding.repeat(length)}`.slice(0,length),isEqual(o1,o2,depth=0){if(depth>100)return!1;if(typeof o1!=typeof o2)return!1;if(Number.isNaN(o1)&&Number.isNaN(o2))return!0;if("object"!=typeof o1)return o1===o2;if(o1===o2)return!0;if(!o1||!o2)return!1;if(Array.isArray(o1))return!!Array.isArray(o2)&&(o1.every(((v,i)=>this.isEqual(v,o2[i])))&&o1.length===o2.length);const o1Keys=Object.keys(o1).sort(),o2Keys=Object.keys(o2).sort();return o1Keys.every((k=>this.isEqual(o1[k],o2[k],depth+1)))&&this.isEqual(o1Keys,o2Keys)},cloneDeep:o=>JSON.parse(JSON.stringify(o)),uniqBy(items,keyFn){const seen=new Set,out=[];for(const item of items){const key=keyFn(item);seen.has(key)||(seen.add(key),out.push(item))}return out},groupBy:(items,keyFn)=>[...groupIntoMap(items,keyFn).values()],groupIntoMap,maxBy(items,keyFn){let maxItem,maxValue=-1/0;for(const item of items){const value=keyFn(item);value>maxValue&&(maxItem=item,maxValue=value)}return maxItem},minBy(items,keyFn){return this.maxBy(items,(o=>-keyFn(o)))},sortBy:(items,keyFn)=>items.slice().sort(((a,b)=>keyFn(a)-keyFn(b))),pick(object,propertiesToPick){const out={};for(const[key_,value]of Object.entries(object)){const key=key_;propertiesToPick.includes(key)&&(out[key]=value)}return out},omit(object,propertiesToDrop,options={}){const out={};for(const[key_,value]of Object.entries(object)){const key=key_;propertiesToDrop.includes(key)||(options.dropUndefined&&void 0===value||(out[key]=value))}return out},shortId:uuid=>uuid.replace(/-/g,"").slice(0,12),pluralize:(string,number,pluralForm)=>(pluralForm=pluralForm||`${string}s`,1===number?string:pluralForm),uniqueId:(()=>{let id=1;return()=>id++})()}},"../utils/src/seed-data/lhr-generator.js":(module,__unused_webpack_exports,__webpack_require__)=>{const _=__webpack_require__("../utils/src/lodash.js");function getCategoryForAuditId(auditId){return auditId.startsWith("a11y")?"accessibility":auditId.startsWith("seo")?"seo":auditId.startsWith("best-practices")?"best-practices":auditId.startsWith("pwa")?"pwa":"performance"}function getGroupForAuditId(auditId){return"cumulative-layout-shift"===auditId||"first-contentful-paint"===auditId||"first-meaningful-paint"===auditId||"speed-index"===auditId||"interactive"===auditId||"first-cpu-idle"===auditId||"max-potential-fid"===auditId?"metrics":auditId.startsWith("diagnostic-")?"diagnostics":auditId.startsWith("uses-")?"load-opportunities":auditId.startsWith("a11y-aria")?"a11y-aria":auditId.startsWith("a11y")?"a11y-best-practices":auditId.startsWith("seo")?"seo-content":auditId.startsWith("best-practices")?"best-practices":auditId.startsWith("pwa-fast-reliable")?"pwa-fast-reliable":auditId.startsWith("pwa-installable")?"pwa-installable":auditId.startsWith("pwa-optimized")?"pwa-optimized":void 0}function generateNumericValue(average,prandom){const maxDelta=.1*average;return 2*(prandom.next()-.5)*maxDelta+average}module.exports={createLHR:function createLHR(pageUrl,auditDefs,prandom){const audits={},loremIpsumTokens="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin urna nunc, molestie sed hendrerit et, vulputate vitae mauris. Sed tempor vitae risus vel hendrerit. Nulla vestibulum malesuada erat vitae laoreet. Phasellus sodales vehicula dolor, dictum ullamcorper metus aliquam id. Nullam porttitor posuere purus id rhoncus. Sed et mi ligula. Donec imperdiet nulla sit amet justo cursus, id tempus ex accumsan. Maecenas ultricies elit eget lectus posuere vestibulum. Cras vestibulum neque nec justo congue feugiat non id dui. Pellentesque dapibus ac orci sed malesuada. Sed rhoncus vitae lorem eget facilisis. Donec auctor tortor a tortor egestas, vel condimentum lacus auctor.".split(" ");for(const auditDef of auditDefs){const{auditId,averageNumericValue,averageWastedMs,unit="items"}=auditDef,groupId=getGroupForAuditId(auditId);if("number"==typeof averageNumericValue){const numericValue=generateNumericValue(averageNumericValue,prandom),score=1-Math.min(1,Math.max((numericValue-1e3)/9e3,0));audits[auditId]={score,numericValue,scoreDisplayMode:"numeric",displayValue:"metrics"===groupId?`${(numericValue/1e3).toLocaleString(void 0,{maximumFractionDigits:1})} s`:`${Math.round(numericValue)} ${unit}`}}else if("number"==typeof averageWastedMs){const wastedMs=generateNumericValue(averageWastedMs,prandom),score=1-Math.min(1,Math.max((wastedMs-100)/900,0)),hasBytes=auditDef.items&&auditDef.items.some((item=>item.averageWastedBytes)),wastedBytes=257*wastedMs;audits[auditId]={score,scoreDisplayMode:"numeric",displayValue:hasBytes?`${(wastedBytes/1024).toLocaleString(void 0,{maximumFractionDigits:0})} KB`:`${(wastedMs/1e3).toLocaleString(void 0,{maximumFractionDigits:1})} s`,details:{type:"opportunity",overallSavingsMs:wastedMs,overallSavingsBytes:hasBytes?wastedBytes:void 0,items:[]}}}else{const{passRate=1}=auditDef;audits[auditId]={score:prandom.next()<=passRate?1:0,scoreDisplayMode:"binary"}}const headersAsObject={};if(auditDef.items){const items=[];for(const{url,inclusionRate=1,...rest}of auditDef.items){if(prandom.next()>inclusionRate)continue;const item={};url&&(url.includes("lorempixel")&&(headersAsObject.thumbnail={key:"url",valueType:"thumbnail"}),headersAsObject.url={key:"url",valueType:"url",label:"URL"},item.url=new URL(url,pageUrl).href);for(const key of Object.keys(rest))if(key.startsWith("average")){const dataKey=key.replace("average","").replace(/^\w/,(v=>v.toLowerCase())),valueType=key.endsWith("Ms")?"timespanMs":"bytes";headersAsObject[dataKey]={key:dataKey,valueType,label:_.startCase(dataKey)};const averageValue=rest[key];item[dataKey]=generateNumericValue(averageValue,prandom)}else headersAsObject[key]={key,valueType:"text",label:_.startCase(key)},item[key]=rest[key];items.push(item)}const details=audits[auditId].details||{type:"table"};details.headings=Object.values(headersAsObject).map((header=>"load-opportunities"===getGroupForAuditId(auditId)?header:{...header,itemType:header.valueType,text:header.label,valueType:void 0})),details.items=items,audits[auditId].details=details}audits[auditId].title=_.startCase(auditId),audits[auditId].description=`Help text for ${_.startCase(auditId)}. ${loremIpsumTokens.slice(0,Math.round(1.5*auditId.length)).join(" ")}.`}const categories={},auditsGroupedByCategory=_.groupBy(Object.entries(audits),(pair=>getCategoryForAuditId(pair[0])));for(const audits of auditsGroupedByCategory){const category=getCategoryForAuditId(audits[0][0]),sum=audits.reduce(((sum,next)=>sum+(next[1].score||0)),0);categories[category]={id:category,title:category.toUpperCase(),score:sum/audits.length,auditRefs:audits.map((([id])=>({id,weight:1,group:getGroupForAuditId(id)})))}}const fetchTimeBase=new Date("2019-08-01T12:00:00").getTime(),fetchTimeOffset=Math.round(1e3*prandom.next()*60*60*24*7);return{requestedUrl:pageUrl,finalUrl:pageUrl,categories,audits,fetchTime:new Date(fetchTimeBase+fetchTimeOffset).toISOString(),lighthouseVersion:"5.2.0",configSettings:{channel:"cli"},categoryGroups:{metrics:{title:"Metrics"},"load-opportunities":{title:"Opportunities"},diagnostics:{title:"Diagnostics"},accessibility:{title:"Accessibility"},seo:{title:"SEO"},"best-practices":{title:"Best Practices"},"pwa-fast-reliable":{title:"PWA Fast & Reliable"},"pwa-installable":{title:"PWA Installable"},"pwa-optimized":{title:"PWA Optimized"}},runWarnings:[],userAgent:"Chrome!",environment:{hostUserAgent:"",networkUserAgent:"",benchmarkIndex:500},timing:{total:1,entries:[]},i18n:{rendererFormattedStrings:{},icuMessagePaths:{}}}},generateNumericValue,getGroupForAuditId}}}]);